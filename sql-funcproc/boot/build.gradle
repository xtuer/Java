plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.xtuer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext.versions = [
		lombok     : '1.18.22',
		commonsIO  : '2.11.0',
		commonsLang: '3.8',
		commonsText: '1.7',
		guava      : '31.0.1-jre',
		mybatis    : '2.1.1',
		mysql      : '5.1.46',
]

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation(
			"commons-io:commons-io:${versions.commonsIO}",
			"org.mybatis.spring.boot:mybatis-spring-boot-starter:${versions.mybatis}",
			"com.google.guava:guava:31.0.1-jre",
	)

	implementation 'commons-dbutils:commons-dbutils:1.7'
	implementation "org.apache.commons:commons-lang3:3.8"
	implementation 'mysql:mysql-connector-java:5.1.46'
	implementation 'com.oracle.database.jdbc:ojdbc10:19.18.0.0'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
//    implementation group: 'com.ibm.db2.jcc', name: 'db2jcc', version: 'db2jcc4'
	implementation files('src/lib/db2jcc4_4.26.14.jar')
	implementation files('src/lib/mssql-jdbc-9.4.0.jre8.jar')

	runtimeOnly("mysql:mysql-connector-java:${versions.mysql}")

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// Lombok
	compileOnly "org.projectlombok:lombok:${versions.lombok}"
	annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
}

tasks.named('test') {
	useJUnitPlatform()
}

////////////////////////////////////////////////////////////////////////////////
//                                    JVM                                     //
////////////////////////////////////////////////////////////////////////////////
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

compileJava {
	options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation' << '-parameters'
	options.forkOptions.jvmArgs << '-parameters'
}

// 如果设置了 JRebel，则使用 JRebel 进行热更新
if (project.hasProperty('rebelAgent')) {
	bootRun.jvmArgs += rebelAgent
}
