<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <import resource="classpath:config/spring-view-controller.xml"/>

    <!-- ⾃自动扫描的包名:
         在包名 com.eduedu.ebag.controller 下的标记为 @Controller, @Service, @Component 的类
         都会⾃动的生成一个对象存储到 Spring Container ⾥
    -->
    <context:component-scan base-package="com.eduedu.ebag.controller"></context:component-scan>
    <context:component-scan base-package="com.eduedu.ebag.service"></context:component-scan>

    <!-- 默认的注解映射支持 -->
    <!--<mvc:annotation-driven/>-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Freemarker 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="prefix" value=""/>
        <property name="order" value="0"/>
        <property name="cache" value="true"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
    </bean>

    <!-- Freemarker configuration -->
    <!-- Freemarker 文件放在目录 WEB-INF/view/ftl 下 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/view/fm/"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>

        <!-- 定义变量, 在模版里直接可以使用 -->
        <property name="freemarkerVariables">
            <map>
                <entry key="baseUrl" value="@baseUrl@"/>
            </map>
        </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000"/>
    </bean>

    <!-- 对静态资源的访问，如 js, css, jpg, png -->
    <!-- 如 HTML 里访问 /js/jquery.js, 则实际访问的是 /WEB-INF/asset/js/jquery.js -->
    <mvc:resources mapping="/js/**"  location="/WEB-INF/asset/js/"  cache-period="1"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/asset/css/" cache-period="1"/>
    <mvc:resources mapping="/img/**" location="/WEB-INF/asset/img/" cache-period="1"/>
    <mvc:resources mapping="/lib/**" location="/WEB-INF/asset/lib/" cache-period="1"/>
</beans>
