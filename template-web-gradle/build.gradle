import org.apache.tools.ant.filters.ReplaceTokens

group 'com.xtuer'
version '1.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.2.4'
    }
}

gretty {
    port = 8080
    contextPath = '/'
    servletContainer = 'tomcat7'

    debugSuspend = false
    managedClassReload      = true
    recompileOnSourceChange = false
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

////////////////////////////////////////////////////////////////////////////////
//                                   Maven 依赖                               //
////////////////////////////////////////////////////////////////////////////////
repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    // 运行和打包的环境选择, 默认是开发环境
    // 获取 gradle 参数中 -Dprofile 的值: gradle -Denv=production clean build
    environment = System.getProperty("env", "development")
}

ext.versions = [
    spring:         '4.2.6.RELEASE',
    springSecurity: '4.1.0.RELEASE',
    jstl:           '1.2',
    servlet:        '3.1.0',
    jackson:        '2.5.3',
    freemarker:     '2.3.20',
    logback:        '1.1.2',
    mysql:          '5.1.21',
    mybatis:        '3.2.1',
    mybatisSpring:  '1.2.2',
    dbcp:           '2.1.1',
    junit:          '4.12',
    jclOverSlf4j:   '1.7.21'
]

dependencies {
    compile(
            "org.springframework:spring-webmvc:$versions.spring",             // Spring MVC
            "org.springframework:spring-context-support:$versions.spring",
            "org.springframework.security:spring-security-web:$versions.springSecurity", // Spring Security
            "org.springframework.security:spring-security-config:$versions.springSecurity",
            "org.freemarker:freemarker:$versions.freemarker",                 // Freemarker
            "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",  // JSON
            "mysql:mysql-connector-java:$versions.mysql",                     // MyBatis
            "org.springframework:spring-jdbc:$versions.spring",
            "org.mybatis:mybatis-spring:$versions.mybatisSpring",
            "org.mybatis:mybatis:$versions.mybatis",
            "org.apache.commons:commons-dbcp2:$versions.dbcp",
            "ch.qos.logback:logback-classic:$versions.logback",               // Logback
            "org.slf4j:jcl-over-slf4j:$versions.jclOverSlf4j"
    )

    compile("javax.servlet:jstl:$versions.jstl") // JSTL
    compileOnly("javax.servlet:javax.servlet-api:$versions.servlet") // Servlet
    testCompile("junit:junit:$versions.junit")
}

////////////////////////////////////////////////////////////////////////////////
//                                   动态替换                                  //
////////////////////////////////////////////////////////////////////////////////
def loadConfiguration() {
    println "==> Load configuration for '" + environment + "'"
    def configFile = file('config.groovy') // 配置文件
    return new ConfigSlurper(environment).parse(configFile.toURI().toURL()).toProperties()
}

processResources {
    // src/main/resources 下的文件中 @key@ 的内容使用 config.groovy 里对应的进行替换
    from(sourceSets.main.resources.srcDirs) {
        filter(ReplaceTokens, tokens: loadConfiguration())
    }
}
