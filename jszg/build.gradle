import org.apache.tools.ant.filters.ReplaceTokens

group 'com.xtuer'
version '1.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.4.0'
    }
}

gretty {
    httpPort    = 8080
    contextPath = ''
    servletContainer = 'tomcat7'

    inplaceMode  = 'hard'
    debugSuspend = false
    managedClassReload      = true
    recompileOnSourceChange = false
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

////////////////////////////////////////////////////////////////////////////////
//                                   Maven 依赖                               //
////////////////////////////////////////////////////////////////////////////////
repositories {
    mavenLocal()
    mavenCentral()
}

ext.versions = [
    spring:        '4.3.3.RELEASE',
    servlet:       '3.1.0',
    fastjson:      '1.2.17',
    freemarker:    '2.3.23',
    junit:         '4.12',
    logback:       '1.1.2',
    jclOverSlf4j:  '1.7.21',
    mysql:         '5.1.21',
    mybatis:       '3.2.1',
    mybatisSpring: '1.2.2',
    dbcp:          '2.1.1',
    redis:         '1.7.4.RELEASE',
    sessionRedis:  '1.2.2.RELEASE'
]

dependencies {
    compile(
            "org.springframework:spring-webmvc:$versions.spring",  // Spring MVC
            "org.springframework:spring-context-support:$versions.spring",
            "com.alibaba:fastjson:$versions.fastjson",             // JSON
            "org.freemarker:freemarker:$versions.freemarker",      // Freemarker
            "ch.qos.logback:logback-classic:$versions.logback",    // 日志
            "org.slf4j:jcl-over-slf4j:$versions.jclOverSlf4j",     // 日志
            "org.springframework:spring-jdbc:$versions.spring",    // 数据库
            "mysql:mysql-connector-java:$versions.mysql",          // 数据库
            "org.mybatis:mybatis:$versions.mybatis",               // 数据库
            "org.mybatis:mybatis-spring:$versions.mybatisSpring",  // 数据库
            "org.apache.commons:commons-dbcp2:$versions.dbcp",     // 数据库
            "org.springframework.data:spring-data-redis:$versions.redis",
            "org.springframework.session:spring-session-data-redis:$versions.sessionRedis"
    )

    compileOnly("javax.servlet:javax.servlet-api:$versions.servlet")
    testCompile("junit:junit:$versions.junit")
}

ext {
    // 运行和打包的环境选择, 默认是开发环境
    // 获取 gradle 参数中 -Dprofile 的值: gradle -Denv=production clean build
    environment = System.getProperty("env", "development")
}

def loadConfiguration() {
    println "==> Load configuration for '" + environment + "'"
    def configFile = file('config.groovy') // 配置文件
    return new ConfigSlurper(environment).parse(configFile.toURI().toURL()).toProperties()
}

processResources {
    // src/main/resources 下的文件中 @key@ 的内容使用 config.groovy 里对应的进行替换
    from(sourceSets.main.resources.srcDirs) {
        filter(ReplaceTokens, tokens: loadConfiguration())
    }
}
