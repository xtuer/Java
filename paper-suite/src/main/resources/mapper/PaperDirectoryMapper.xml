<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 非常重要：必须是 Mapper 类的全路径-->
<mapper namespace="com.xtuer.mapper.PaperDirectoryMapper">
    <!--查找父目录下的目录-->
    <select id="findPaperSubdirectories" resultType="PaperDirectory">
        SELECT paper_directory_id as paperDirectoryId,
            name,
            parent_paper_directory_id as parentPaperDirectoryId,
            is_deleted as deleted
        FROM  paper_directory
        WHERE parent_paper_directory_id=#{paperDirectoryId} AND is_deleted=0
        ORDER BY name
    </select>

    <!--获取所有的目录-->
    <select id="getAllPaperDirectories" resultType="PaperDirectory">
        SELECT paper_directory_id as paperDirectoryId,
            name,
            parent_paper_directory_id as parentPaperDirectoryId,
            is_deleted as deleted
        FROM  paper_directory
        WHERE is_deleted=0
        ORDER BY name
    </select>

    <!--是否有子目录-->
    <select id="hasPaperSubdirectories" parameterType="string" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM paper_directory WHERE parent_paper_directory_id=#{paperDirectoryId} AND is_deleted=0)
    </select>

    <!--目录中是否有试卷-->
    <select id="hasPapers" parameterType="string" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM paper WHERE paper_directory_id=#{paperDirectoryId} AND is_deleted=0)
    </select>

    <!--检查目录是否存在-->
    <select id="isPaperDirectoryExisting" parameterType="string" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM paper_directory WHERE paper_directory_id=#{paperDirectoryId})
    </select>

    <!--查询所有目录下试卷的数量-->
    <select id="findPaperCountsInPaperDirectories" resultType="map">
        SELECT p.paper_directory_id AS paperDirectoryId, count(pd.paper_directory_id) AS count
        FROM paper p, paper_directory pd WHERE p.paper_directory_id=pd.paper_directory_id
        GROUP BY pd.paper_directory_id
    </select>

    <!--查询目录下试卷的所有知识点-->
    <select id="findKnowledgePointsInPaperDirectory" parameterType="string" resultType="KnowledgePoint">
        SELECT DISTINCT kp.knowledge_point_id AS knowledgePointId, kp.name AS name
        FROM paper_knowledge_point_relation pkpr, knowledge_point kp, paper p
        WHERE kp.knowledge_point_id=pkpr.knowledge_point_id
            AND p.paper_id=pkpr.paper_id
            AND p.paper_directory_id=#{paperDirectoryId}
            AND p.is_deleted=0
            AND pkpr.is_deleted=0
        ORDER BY name
    </select>

    <!--创建目录-->
    <insert id="createPaperDirectory" parameterType="PaperDirectory">
        INSERT INTO paper_directory(paper_directory_id, name, parent_paper_directory_id, is_deleted)
        VALUES(#{paperDirectoryId}, #{name}, #{parentPaperDirectoryId}, 0)
    </insert>

    <!--修改目录的父目录 id-->
    <update id="changeParentPaperDirectoryId">
        UPDATE paper_directory SET parent_paper_directory_id=#{parentPaperDirectoryId} WHERE paper_directory_id=#{paperDirectoryId}
    </update>

    <!--重命名目录-->
    <update id="renamePaperDirectory">
        UPDATE paper_directory SET name=#{name} WHERE paper_directory_id=#{paperDirectoryId}
    </update>

    <!--设置 is_deleted 为 1，标记目录已经被删除了-->
    <update id="markPaperDirectoryAsDeleted" parameterType="string">
        UPDATE paper_directory SET is_deleted=1 WHERE paper_directory_id=#{paperDirectoryId}
    </update>
</mapper>
