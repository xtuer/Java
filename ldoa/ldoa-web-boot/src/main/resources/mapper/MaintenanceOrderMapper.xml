<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 必须是接口 Mapper 的全路径 -->
<mapper namespace="com.xtuer.mapper.MaintenanceOrderMapper">
    <sql id="maintenanceOrderColumns">
        mo.maintenance_order_id,
        mo.maintenance_order_sn,
        mo.service_person_id,
        user.nickname AS service_person_name,
        mo.customer_name,
        mo.maintainable,
        mo.repairable,
        mo.salesperson_name,
        mo.received_date,
        mo.product_code,
        mo.product_name,
        mo.product_model,
        mo.product_count,
        mo.product_item_name,
        mo.product_item_batch,
        mo.product_item_count,
        mo.accessories,
        mo.need_certificate,
        mo.problem,
        mo.progress,
        mo.order_sn,
        mo.state,
        mo.committed,
        mo.created_at
    </sql>

    <!-- 查询符合条件的维保订单 -->
    <select id="findMaintenanceOrders" resultType="MaintenanceOrder">
        SELECT <include refid="maintenanceOrderColumns"/>
        FROM maintenance_order mo
            LEFT JOIN user ON user.user_id = mo.service_person_id
        <where>
            <if test="filter.state >= 0">
                AND state = #{filter.state}
            </if>
            <if test="filter.maintenanceOrderSn!=null and filter.maintenanceOrderSn!='' ">
                AND maintenance_order_sn LIKE CONCAT('%', #{filter.maintenanceOrderSn},'%')
            </if>
            <if test="filter.salespersonName!=null and filter.salespersonName!='' ">
                AND salesperson_name LIKE CONCAT('%', #{filter.salespersonName},'%')
            </if>
            <if test="filter.customerName!=null and filter.customerName!='' ">
                AND customer_name LIKE CONCAT('%', #{filter.customerName},'%')
            </if>
            <if test="filter.productName!=null and filter.productName!='' ">
                AND product_name LIKE CONCAT('%', #{filter.productName},'%')
            </if>
            <if test="filter.productCode!=null and filter.productCode!='' ">
                AND product_code LIKE CONCAT('%', #{filter.productCode},'%')
            </if>
            <if test="filter.productModel!=null and filter.productModel!='' ">
                AND product_model LIKE CONCAT('%', #{filter.productModel},'%')
            </if>
            <if test="filter.servicePersonName!=null and filter.servicePersonName!=null">
                AND user.nickname LIKE CONCAT('%', #{filter.servicePersonName},'%')
            </if>
            <if test="filter.receivedStartAt!=null and filter.receivedEndAt!=null">
                AND (received_date BETWEEN #{filter.receivedStartAt} AND #{filter.receivedEndAt})
            </if>
        </where>
        ORDER BY created_at DESC
        LIMIT ${page.offset}, ${page.count}
    </select>

    <!-- 查询指定 ID 的维保订单 -->
    <select id="findMaintenanceOrderById" resultType="MaintenanceOrder">
        SELECT <include refid="maintenanceOrderColumns"/>
        FROM maintenance_order mo
            LEFT JOIN user ON user.user_id = mo.service_person_id
        WHERE maintenance_order_id = #{orderId}
    </select>

    <!-- 插入或者更新维保订单 -->
    <insert id="upsertMaintenanceOrder" parameterType="MaintenanceOrder">
        INSERT INTO maintenance_order(maintenance_order_id, maintenance_order_sn, service_person_id, customer_name,
            maintainable, repairable, salesperson_name, received_date, product_code, product_name, product_model, product_count,
            product_item_name, product_item_batch, product_item_count, accessories, need_certificate, problem, progress, order_sn, state)
        VALUES (#{maintenanceOrderId}, #{maintenanceOrderSn}, #{servicePersonId}, #{customerName},
            #{maintainable}, #{repairable}, #{salespersonName}, #{receivedDate}, #{productCode}, #{productName}, #{productModel}, #{productCount},
            #{productItemName}, #{productItemBatch}, #{productItemCount}, #{accessories}, #{needCertificate}, #{problem}, #{progress}, #{orderSn}, #{state})

        ON DUPLICATE KEY
        UPDATE maintenance_order_sn = #{maintenanceOrderSn}, customer_name = #{customerName},
            maintainable = #{maintainable}, repairable = #{repairable}, salesperson_name = #{salespersonName},
            received_date = #{receivedDate}, product_code = #{productCode}, product_name = #{productName}, product_model = #{productModel}, product_count = #{productCount},
            product_item_name = #{productItemName}, product_item_batch = #{productItemBatch}, product_item_count = #{productItemCount},
            accessories = #{accessories}, need_certificate = #{needCertificate}, problem = #{problem}, progress = #{progress}, order_sn = #{orderSn}, state = #{state}
    </insert>

    <!-- 修改维保订单的状态 -->
    <update id="updateMaintenanceOrderState">
        UPDATE maintenance_order SET state = #{state} WHERE maintenance_order_id = #{orderId}
    </update>

    <!-- 更新订单的进度 -->
    <update id="updateMaintenanceOrderProgress">
        UPDATE maintenance_order SET progress = #{progress} WHERE maintenance_order_id = #{orderId}
    </update>

    <!-- 删除维保订单 -->
    <delete id="deleteMaintenanceOrder">
        DELETE FROM maintenance_order WHERE maintenance_order_id = #{orderId}
    </delete>

    <!-- 提交维保订单 -->
    <update id="commitMaintenanceOrder">
        UPDATE maintenance_order SET committed = 1 WHERE maintenance_order_id = #{orderId};
    </update>

    <!-- 查询维保订单的订单项 -->
    <select id="findMaintenanceOrderItemsByMaintenanceOrderId" resultType="MaintenanceOrderItem">
        SELECT maintenance_order_id,
            maintenance_order_item_id,
            product_name,
            product_code,
            product_model,
            electric_quantity_before,
            software_version_before,
            hardware_version_before,
            power_dissipation_before,
            temperature_before,
            chip_code,
            check_details,
            maintenance_details,
            probe_detector_code_before,
            electric_quantity_after,
            software_version_after,
            hardware_version_after,
            power_dissipation_after,
            temperature_after,
            probe_detector_code_after,
            production_date
        FROM maintenance_order_item
        WHERE maintenance_order_id = #{orderId}
    </select>

    <!-- 创建维保订单项 -->
    <insert id="insertMaintenanceOrderItem">
        INSERT INTO maintenance_order_item (maintenance_order_id, maintenance_order_item_id,
            product_name, product_code, product_model,
            electric_quantity_before, software_version_before, hardware_version_before,
            power_dissipation_before, temperature_before, chip_code, check_details,
            maintenance_details, probe_detector_code_before,
            electric_quantity_after, software_version_after, hardware_version_after,
            power_dissipation_after, temperature_after, probe_detector_code_after,
            production_date
        )
        VALUES (#{maintenanceOrderId}, #{maintenanceOrderItemId},
            #{productName}, #{productCode}, #{productModel},
            #{electricQuantityBefore}, #{softwareVersionBefore}, #{hardwareVersionBefore},
            #{powerDissipationBefore}, #{temperatureBefore}, #{chipCode}, #{checkDetails},
            #{maintenanceDetails}, #{probeDetectorCodeBefore},
            #{electricQuantityAfter}, #{softwareVersionAfter}, #{hardwareVersionAfter},
            #{powerDissipationAfter}, #{temperatureAfter}, #{probeDetectorCodeAfter},
            #{productionDate}
        )
    </insert>

    <!-- 删除维保订单的订单项 -->
    <delete id="deleteMaintenanceOrderItemsByMaintenanceOrderId">
        DELETE FROM maintenance_order_item
        WHERE maintenance_order_id = #{orderId}
    </delete>
</mapper>
