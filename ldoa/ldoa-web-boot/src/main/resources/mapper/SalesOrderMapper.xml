<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 非常重要：必须是 Mapper 类的全路径 -->
<mapper namespace="com.xtuer.mapper.SalesOrderMapper">
    <!-- 销售订单的列 -->
    <sql id="salesOrderColumns">
        so.sales_order_id, so.sales_order_sn, so.topic, so.agreement_date, so.delivery_date,
        so.owner_id, so.customer_id, so.customer_contact, so.business, so.work_unit, so.remark, so.produce_order_id,
        so.deal_amount, so.cost_deal_amount, so.consultation_fee, so.should_pay_amount, so.paid_amount, so.state, so.paid_at
    </sql>

    <!-- 查询指定 ID 的销售订单 -->
    <select id="findSalesOrderById" resultType="SalesOrder">
        SELECT <include refid="salesOrderColumns"/>,
        user.nickname AS owner_name, c.name AS customer_name
        FROM sales_order so
        LEFT JOIN user ON user.user_id = so.owner_id
        LEFT JOIN customer c ON c.customer_id = so.customer_id
        WHERE sales_order_id = #{orderId}
    </select>

    <!-- 查询符合条件的销售订单 -->
    <select id="findSalesOrders" resultType="SalesOrder">
        SELECT <include refid="salesOrderColumns"/>,
            user.nickname AS owner_name, c.name AS customer_name
        FROM sales_order so
            LEFT JOIN user ON user.user_id = so.owner_id
            LEFT JOIN customer c ON c.customer_id = so.customer_id
        <where>
            <if test="filter.topic!=null and filter.topic!='' ">
                AND topic LIKE CONCAT('%', #{filter.topic},'%')
            </if>
            <if test="filter.business!=null and filter.business!='' ">
                AND business LIKE CONCAT('%', #{filter.business},'%')
            </if>
            <if test="filter.customerName!=null and filter.customerName!='' ">
                AND so.customer_id IN (SELECT customer_id FROM customer WHERE name LIKE CONCAT('%', #{filter.customerName},'%'))
            </if>
            <if test="filter.state > 0">
                AND so.state = #{filter.state}
            </if>
            <if test="filter.paidAtStart != null and filter.paidAtEnd != null">
                AND (so.paid_at BETWEEN #{filter.paidAtStart} AND #{filter.paidAtEnd})
            </if>
            <if test="filter.agreementStart != null and filter.agreementEnd != null">
                AND (so.agreement_date BETWEEN #{filter.agreementStart} AND #{filter.agreementEnd})
            </if>
        </where>
        ORDER BY so.agreement_date DESC
        LIMIT ${page.offset}, ${page.count}
    </select>

    <!-- 更新或者插入销售订单 -->
    <insert id="upsertSalesOrder">
        INSERT INTO sales_order (sales_order_id, sales_order_sn, topic, agreement_date, delivery_date,
            owner_id, customer_id, customer_contact, business, work_unit, remark, produce_order_id,
            deal_amount, cost_deal_amount, consultation_fee, should_pay_amount, state)
        VALUES(#{salesOrderId}, #{salesOrderSn}, #{topic}, #{agreementDate}, #{deliveryDate},
            #{ownerId}, #{customerId}, #{customerContact}, #{business}, #{workUnit}, #{remark}, #{produceOrderId},
            #{dealAmount}, #{costDealAmount}, #{consultationFee}, #{shouldPayAmount}, #{state})

        ON DUPLICATE KEY
        UPDATE topic = #{topic}, agreement_date = #{agreementDate}, delivery_date = #{deliveryDate},
            owner_id = #{ownerId}, customer_id = #{customerId}, customer_contact = #{customerContact},
            business = #{business}, work_unit = #{workUnit}, remark = #{remark},
            deal_amount = #{dealAmount}, cost_deal_amount = #{costDealAmount}, consultation_fee = #{consultationFee}, should_pay_amount = #{shouldPayAmount}
    </insert>
</mapper>
