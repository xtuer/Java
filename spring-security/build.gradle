group 'com.xtuer'
version '1.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.2.4'
    }
}

gretty {
    port = 8080
    contextPath = '/'
    servletContainer = 'tomcat7'

    managedClassReload      = true
    recompileOnSourceChange = false
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

////////////////////////////////////////////////////////////////////////////////
//                                   Maven 依赖                               //
////////////////////////////////////////////////////////////////////////////////
repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    springVersion   = '4.2.5.RELEASE'
    springSecurityVersion = '4.0.4.RELEASE'
    springSessionDataRedisVersion = '1.1.1.RELEASE'
    jstlVersion     = '1.2'
    servletVersion  = '3.1.0'
    jacksonVersion  = '2.5.3'
    freemarkerVersion = '2.3.20'
    logbackVersion = "1.1.2"
    jclOverSlfVersion = "1.7.7"
}

dependencies {
    compile(
            "org.springframework:spring-webmvc:$springVersion",             // Spring MVC
            "org.springframework.security:spring-security-web:$springSecurityVersion", // Spring Security
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework:spring-context-support:$springVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",  // JSON
            "org.freemarker:freemarker:$freemarkerVersion",                 // Freemarker
            "ch.qos.logback:logback-classic:$logbackVersion",               // Logback
            "org.slf4j:jcl-over-slf4j:$jclOverSlfVersion",
            "org.springframework.session:spring-session-data-redis:$springSessionDataRedisVersion" // Spring Session
    )

    compile("javax.servlet:jstl:$jstlVersion") // JSTL
    compileOnly("javax.servlet:javax.servlet-api:$servletVersion")
}
