plugins {
    id 'war'
    id 'java'
    id 'org.akhikhl.gretty' version '2.0.0'
}

gretty {
    httpPort = 8080
    contextPath = ''
    servletContainer = 'tomcat8'

    inplaceMode  = 'hard'
    debugSuspend = false
    managedClassReload      = true
    recompileOnSourceChange = true
    jvmArgs = ['-javaagent:/Users/Biao/Documents/springloaded-1.2.8.RELEASE.jar', '-noverify']
}

////////////////////////////////////////////////////////////////////////////////
//                                   Maven 依赖                               //
////////////////////////////////////////////////////////////////////////////////
repositories {
    mavenCentral()
}

ext.versions = [
    spring   : '5.0.2.RELEASE',
    springSecurity: '5.0.0.RELEASE',
    springSession : '1.3.1.RELEASE',
    servlet  : '4.0.0',
    fastjson : '1.2.41',
    thymeleaf: '3.0.9.RELEASE',
    lombok   : '1.16.18',
    logback  : '1.2.3',
    jclOverSlf4j: '1.7.25'
]

dependencies {
    compile(
            "org.springframework:spring-webmvc:${versions.spring}",
            "org.springframework:spring-context-support:${versions.spring}",
            "org.springframework.security:spring-security-web:${versions.springSecurity}",
            "org.springframework.security:spring-security-config:${versions.springSecurity}",
            "org.springframework.session:spring-session-data-redis:${versions.springSession}",
            "com.alibaba:fastjson:${versions.fastjson}",
            "org.thymeleaf:thymeleaf:${versions.thymeleaf}",
            "org.thymeleaf:thymeleaf-spring5:${versions.thymeleaf}",
            "ch.qos.logback:logback-classic:${versions.logback}", // Logback
            "org.slf4j:jcl-over-slf4j:${versions.jclOverSlf4j}"
    )

    compileOnly("javax.servlet:javax.servlet-api:${versions.servlet}")
    compileOnly("org.projectlombok:lombok:${versions.lombok}")
    testCompile("org.springframework:spring-test:${versions.spring}")
}

////////////////////////////////////////////////////////////////////////////////
//                                    JVM                                     //
////////////////////////////////////////////////////////////////////////////////
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}
