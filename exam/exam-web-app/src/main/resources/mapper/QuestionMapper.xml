<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 非常重要：必须是 Mapper 类的全路径 -->
<mapper namespace="com.exam.mapper.exam.QuestionMapper">
    <!-- 题目的列 -->
    <sql id="question_columns">
        q.id AS id, q.stem AS stem, q.key AS `key`, q.analysis AS analysis,
        q.type AS type, q.difficulty AS difficulty, q.position AS position,
        q.purpose AS purpose, q.parent_id AS parent_id, q.options_json AS options_json
    </sql>

    <!-- 查找指定 ID 的题目 (如有小题，同时查出) -->
    <select id="findQuestionById" parameterType="long" resultType="Question">
        (
            SELECT <include refid="question_columns"/>
            FROM exam_question q
            WHERE q.id = #{questionId}
            ORDER BY q.position
        )

        UNION ALL

        (
            SELECT <include refid="question_columns"/>
            FROM exam_question q
            WHERE q.parent_id = #{questionId}
            ORDER BY q.position
        )
    </select>

    <!-- 插入或者更新题目 -->
    <insert id="upsertQuestion" parameterType="Question">
        INSERT INTO exam_question (id, stem, `key`, analysis, type, difficulty, position, purpose, parent_id, options_json)
        VALUES (#{id}, #{stem}, #{key}, #{analysis}, #{type}, #{difficulty}, #{position}, #{purpose}, #{parentId}, #{optionsJson})

        ON DUPLICATE KEY
        UPDATE stem = #{stem}, `key` = #{key}, analysis = #{analysis}, type = #{type},
               difficulty = #{difficulty}, position = #{position}, purpose = #{purpose}, parent_id = #{parentId}, options_json = #{optionsJson}
    </insert>

    <!-- 删除题目，同时会删除题目、题目的小题 -->
    <delete id="deleteQuestion" parameterType="long">
        DELETE FROM exam_question WHERE id = #{questionId};
        DELETE FROM exam_question WHERE parent_id = #{questionId};
    </delete>
</mapper>
